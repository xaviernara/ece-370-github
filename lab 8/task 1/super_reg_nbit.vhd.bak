library ieee;
use ieee.std_logic_1164.all;

entity  super_reg_nbit is

	generic
	(N : (POSITIVE := 3));
	port 
	(
		clk	    : in std_logic;
		en			 : in std_logic;
		rst       : in std_logic;
		load	    : in std_logic;
		op			 : in std_logic_vector(2 downto 0);
		D			 : in std_logic_vector(N-1 downto 0);
		Q			: in std_logic_vector(N-1 downto 0);
		SLout		: out std_logic;
		SRout    : out std_logic;
		TC       : out std_logic
	);

end entity;

architecture behavior of super_reg_nbit is
	
	signal Qtemp: unsigned (N-1 downto 0);

begin

	process (clk, reset)
	begin
		if (reset = '1') then
			sr <= (others=>'0');
		elsif (rising_edge(clk)) then

			if (enable = '1') then

				-- Shift data by one stage; data from last stage is lost
				sr((NUM_STAGES-1) downto 1) <= sr((NUM_STAGES-2) downto 0);

				-- Load new data into the first stage
				sr(0) <= sr_in;

			end if;
		end if;
	end process;

	-- Capture the data from the last stage, before it is lost
	sr_out <= sr(NUM_STAGES-1);

end architecture behavior;
